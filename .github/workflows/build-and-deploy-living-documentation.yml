name: BUILD & DEPLOY

on: [push]

jobs:

  build:

    env:
      RESOURCE_GROUP: synion
      STORAGE_ACCOUNT: synionstorage
      STORAGE_CONTAINER: docs-synion-nl
      CDN_PROFILE: synion-cdn
      CDN_ENDPOINT: docs-synion-www
      STORAGE_BUCKET: products

    runs-on: ubuntu-latest

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v2
        with:
          path: main

      - name: Checkout md-docs repo
        uses: actions/checkout@v2
        with:
          repository: synionnl/living-documentation
          path: md-docs
      
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install md-docs
        working-directory: md-docs
        run: |
          npm install
          npm link

      - name: Build branches
        id: branches
        working-directory: main
        run: |
          md-docs -b
          BRANCHES=$(cat ./dist/branches.json)
          echo "::set-output name=value::${BRANCHES//'%'/'%25'}"

      - name: Build websites
        working-directory: main
        run: |
          git fetch
          for B in $(echo $BRANCHES | jq -r 'sort_by(.path) | .[].name')
          do
              git checkout "$B"
              md-docs
          done
        env:
          BRANCHES: ${{ steps.branches.outputs.value }}

      - name: Deploy to Azure
        if: env.STORAGE_BUCKET == null || env.STORAGE_BUCKET == ''
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az storage container create -n "$STORAGE_CONTAINER" --account-name "$STORAGE_ACCOUNT" --public-access container --auth-mode login
            az storage azcopy blob delete -c "$STORAGE_CONTAINER" --account-name "$STORAGE_ACCOUNT" --recursive
            az storage azcopy blob upload -c "$STORAGE_CONTAINER" -s "./main/dist/*" --account-name "$STORAGE_ACCOUNT" --recursive
            az cdn endpoint purge --content-paths  "/*" --profile-name "$CDN_PROFILE" --name "$CDN_ENDPOINT" --resource-group "$RESOURCE_GROUP"

      - name: Deploy Bucket to Azure
        if: env.STORAGE_BUCKET != null && env.STORAGE_BUCKET != ''
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az storage container create -n "$STORAGE_CONTAINER" --account-name "$STORAGE_ACCOUNT" --public-access container --auth-mode login
            az storage azcopy blob delete -c "$STORAGE_CONTAINER" -t "$STORAGE_BUCKET" --account-name "$STORAGE_ACCOUNT" --recursive
            az storage azcopy blob upload -c "$STORAGE_CONTAINER" -s "./main/dist/*" -d "$STORAGE_BUCKET" --account-name "$STORAGE_ACCOUNT" --recursive
            az cdn endpoint purge --content-paths "/$STORAGE_BUCKET/*" --profile-name "$CDN_PROFILE" --name "$CDN_ENDPOINT" --resource-group "$RESOURCE_GROUP"

      - name: Azure logout
        if: always()
        run: |
          az logout

      - name: Uninstall md-docs
        working-directory: md-docs
        run: |
          npm unlink
